/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt { flavor = "hold-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <19 20 21>;
        };

        bspc {
            bindings = <&kp BSPC>;
            key-positions = <31 32 33>;
        };

        lalt {
            bindings = <&kp LALT>;
            key-positions = <14 2>;
            timeout-ms = <30>;
            slow-release;
        };

        lctl {
            bindings = <&kp LCTRL>;
            key-positions = <3 15>;
            timeout-ms = <30>;
            slow-release;
        };

        lgui {
            bindings = <&kp LGUI>;
            key-positions = <16 4>;
            timeout-ms = <30>;
            slow-release;
        };

        ralt {
            bindings = <&kp LALT>;
            key-positions = <9 21>;
            slow-release;
            timeout-ms = <30>;
        };

        rctl {
            bindings = <&kp LCTRL>;
            key-positions = <8 20>;
            timeout-ms = <30>;
            slow-release;
        };

        rgui {
            bindings = <&kp LGUI>;
            key-positions = <7 19>;
            slow-release;
            timeout-ms = <30>;
        };

        undo {
            bindings = <&undo>;
            key-positions = <29 25>;
            timeout-ms = <25>;
        };

        cut {
            bindings = <&cut>;
            key-positions = <29 26>;
            timeout-ms = <25>;
        };

        copy {
            bindings = <&copy>;
            key-positions = <29 27>;
            timeout-ms = <20>;
        };

        paste {
            bindings = <&paste>;
            key-positions = <29 28>;
            timeout-ms = <15>;
        };
    };

    macros {
        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp Z>;
            label = "UNDO";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp X>;
            label = "CUT";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp C>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp V>;
            label = "PASTE";
        };

        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &mo MACRO_PLACEHOLDER>;

            label = "LM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E          &kp R      &kp T          &kp Y       &kp U      &kp I            &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D          &kp F      &kp G          &kp H       &kp J      &kp K            &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C          &kp V      &kp B          &kp N       &kp M      &kp COMMA        &kp DOT  &kp FSLH  &none
                     &mt LCTRL ESC  &kp LSHFT  &lt 1 SPACE    &lt 2 BSPC  &kp SPACE  &mt RSHFT ENTER
            >;
        };

        specials {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL   &kp AT_SIGN  &kp POUND      &kp DOLLAR      &kp MINUS      &kp PLUS   &kp EQUAL         &kp ASTERISK  &kp UNDER          &kp DOUBLE_QUOTES  &none
&none  &kp TILDE  &kp LBKT     &kp LPAR       &kp LEFT_BRACE  &kp PIPE       &kp AMPS   &kp RBRC          &kp RPAR      &kp RIGHT_BRACKET  &kp SINGLE_QUOTE   &none
&none  &trans     &trans       &kp BACKSLASH  &kp LESS_THAN   &kp PERCENT    &kp CARET  &kp GREATER_THAN  &kp SLASH     &kp DOT            &kp GRAVE          &none
                               &trans         &trans          &trans         &trans     &trans            &trans
            >;
        };

        numpad {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &trans  &trans      &trans       &trans      &trans    &trans  &kp N7  &kp N8  &kp N9  &trans  &none
&none  &mo 3   &lm 3 LALT  &lm 3 LCTRL  &lm 3 LGUI  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans  &none
&none  &trans  &trans      &trans       &trans      &trans    &trans  &kp N1  &kp N2  &kp N3  &trans  &none
                           &trans       &trans      &trans    &trans  &trans  &kp N0
            >;
        };

        fn {
            bindings = <
&none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &none
&none  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &none
&none  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans   &none
                       &mo 6   &mo 4   &mo 5     &trans    &trans    &trans
            >;
        };

        media {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_VOL_DN  &kp C_VOL_UP      &kp C_MUTE  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans            &trans      &trans  &none
                       &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };

        mouse {
            bindings = <
&none  &trans  &trans          &kp PG_UP  &trans           &trans    &trans          &trans          &trans        &trans           &trans  &none
&none  &trans  &msc SCRL_LEFT  &kp PG_DN  &msc SCRL_RIGHT  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &none
&none  &trans  &trans          &trans     &trans           &trans    &trans          &mkp LCLK       &mkp RCLK     &trans           &trans  &none
                               &trans     &trans           &trans    &trans          &trans          &trans
            >;
        };

        control {
            bindings = <
&none  &trans  &trans  &trans  &trans  &kp C_SLEEP    &kp C_PWR      &bt BT_PRV     &bt BT_NXT     &bt BT_CLR     &bt BT_CLR_ALL  &none
&none  &trans  &trans  &trans  &trans  &trans         &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4    &none
&none  &trans  &trans  &trans  &trans  &trans         &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4   &none
                       &trans  &trans  &trans         &trans         &trans         &trans
            >;
        };
    };
};
